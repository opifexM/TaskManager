{"version":3,"sources":["lib/logger.js","slices/notificationSlice.js","components/Notification.jsx","contexts/index.js","hooks/index.js","routes.js","components/Navbar.jsx","components/Welcome.jsx","utils.js","components/Login.jsx","slices/usersSlice.js","components/Registration.jsx","components/NotFoundPage.jsx","components/Users/Users.jsx","components/Users/EditUser.jsx","slices/taskStatusesSlice.js","components/Statuses/Statuses.jsx","components/Statuses/EditStatus.jsx","components/Statuses/NewStatus.jsx","slices/labelsSlice.js","components/Labels/Labels.jsx","components/Labels/EditLabel.jsx","components/Labels/NewLabel.jsx","slices/tasksSlice.js","components/Tasks/Task.jsx","components/Tasks/TaskFilter.jsx","components/Tasks/Tasks.jsx","components/Tasks/NewTask.jsx","components/Tasks/EditTask.jsx","components/App.jsx","providers/AuthProvider.jsx","providers/NotificationProvider.jsx","locales/index.js","locales/en.js","locales/ru.js","slices/index.js","init.jsx","index.js"],"names":["logger","namespace","debug","getLogger","enabled","adapter","createEntityAdapter","initialState","getInitialState","notificationsSlice","createSlice","name","reducers","addMessages","state","action","removeAll","addMany","addMessage","addOne","clean","selectors","getSelectors","notify","actions","Notification","messages","useSelector","selectAll","t","useTranslation","map","message","Alert","show","variant","type","field","defaultMessage","text","id","AuthContext","createContext","NotificationContext","addErrors","addError","useAuth","useContext","useNotify","window","location","host","protocol","fullHost","buildUrl","part","urlPath","path","join","URL","toString","buildLocalUrl","routes","homePagePath","loginPagePath","signupPagePath","usersPagePath","userEditPagePath","statusesPagePath","statusPagePath","newStatusPagePath","statusEditPagePath","labelsPagePath","labelPagePath","newLabelPagePath","labelEditPagePath","tasksPagePath","taskPagePath","newTaskPagePath","taskEditPagePath","apiTasks","apiTask","apiLabels","apiLabel","apiStatuses","apiStatus","apiUsers","apiUser","apiLogin","Navbar","logOut","user","history","useHistory","bg","className","Container","fluid","Nav","to","Link","onClick","from","pathname","push","onLogout","Welcome","Card","Body","Button","href","handleError","error","auth","response","status","data","startsWith","Array","isArray","Login","f","useFormik","initialValues","email","password","validationSchema","yup","shape","onSubmit","formData","a","setSubmitting","setErrors","userData","axios","post","token","logIn","errors","reduce","acc","err","validateOnBlur","validateOnChange","Form","handleSubmit","Group","Label","htmlFor","Control","value","values","disabled","isSubmitting","onChange","handleChange","onBlur","handleBlur","isInvalid","touched","Feedback","usersSlice","addUsers","addUser","updateUser","payload","updateOne","changes","removeUser","removeOne","users","log","Registration","dispatch","useDispatch","firstName","lastName","usersActions","NotFoundPage","alt","src","UsersComponent","removeUserHandler","event","preventDefault","delete","headers","getAuthHeader","Table","striped","hover","Date","createdAt","toLocaleString","EditUser","params","useParams","selectById","userId","enableReinitialize","resetForm","newUser","put","update","taskStatusesSlice","addTaskStatuses","addTaskStatus","updateTaskStatus","removeTaskStatus","taskStatuses","Statuses","removeStatus","EditStatus","useState","taskStatus","setTaskStatus","useEffect","fetchData","get","taskStatusId","newStatus","taskStatusesActions","NewStatus","labelsSlice","addLabels","addLabel","updateLabel","removeLabel","labels","Labels","labelsActions","label","defaultValue","EditLabel","setLabel","labelId","newLabel","NewLabel","tasksSlice","addTasks","addTask","updateTask","removeTask","tasks","Task","task","setTask","taskId","taskData","tasksActions","Header","Title","description","Row","Col","author","executor","e","TaskFilter","props","handler","foundTasks","executors","userSelectors","labelSelectors","taskStatuseSelectors","executorId","isMyTasks","find","authorId","labelsId","md","Select","nullable","Check","Tasks","filteredTasks","setFilteredTasks","tasksSelectors","taskActions","item","NewTask","labelIds","requestTask","parseInt","as","rows","multiple","EditTask","currentTaskData","console","App","isLoading","setLoading","dataRoutes","getData","isSecurity","promises","filter","Promise","all","catch","finally","PrivateRoute","children","exact","component","Users","rel","AuthProvider","currentUser","JSON","parse","localStorage","getItem","setUser","Provider","userAuth","username","setItem","stringify","removeItem","Authorization","NotificationProvider","messageMapping","currentErrors","_","uniqueId","notifyActions","currentError","info","listen","resources","en","translation","ru","hexletTodo","statuses","login","signup","welcome","title","body","buttonText","surname","notFound","header","linkText","fullName","createDate","naming","createTask","createLabel","taskCreating","labelCreating","labelRemoved","create","edit","remove","createStatus","statusCreating","statusCreated","logout","statusEdit","statusEdited","statusRemoved","labelCreated","labelEdit","labelEdited","logoutSuccess","loginSuccess","loginFail","registrationSuccess","registrationFail","taskCreated","userEdit","userEdited","userDeleteDenied","userEditDenied","userDeleted","taskEdited","taskRemoved","enter","tasksStatusId","statusName","taskEdit","accessDenied","save","taskCreateFail","taskEditFail","taskRemoveFail","taskStatusCreateFail","taskStatusEditFail","taskStatusRemoveFail","labelCreateFail","labelEditFail","labelRemoveFail","userEditFail","taskEditDenied","editTask","configureStore","reducer","usersReducer","labelsReducer","taskStatusesReducer","tasksReducer","notifyReducer","app","process","rollbarConfig","accessToken","ROLLBAR_TOKEN","captureUncaught","captureUnhandledRejections","environment","i18n","i18next","createInstance","use","initReactI18next","init","fallbackLng","vdom","config","ErrorBoundary","store","I18nextProvider","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.fe88c24f.chunk.js","sourcesContent":["import debug from 'debug';\n\nconst logger = (namespace) => debug(`frontend:${namespace}`);\nexport default logger;\n","import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\n\nimport getLogger from '../lib/logger.js';\n\nconst log = getLogger('slice notifications');\nlog.enabled = true;\n\nconst adapter = createEntityAdapter();\nconst initialState = adapter.getInitialState();\n\nexport const notificationsSlice = createSlice({\n  name: 'notify',\n  initialState,\n  reducers: {\n    addMessages(state, action) {\n      adapter.removeAll(state);\n      adapter.addMany(state, action);\n    },\n    addMessage(state, action) {\n      adapter.removeAll(state);\n      adapter.addOne(state, action);\n    },\n    clean: adapter.removeAll,\n  },\n});\n\nexport const selectors = adapter.getSelectors((state) => state.notify);\nexport const { actions } = notificationsSlice;\nexport default notificationsSlice.reducer;\n","// @ts-check\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Alert } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectors } from '../slices/notificationSlice.js';\nimport getLogger from '../lib/logger.js';\n\nconst log = getLogger('notification');\nlog.enabled = true;\n\nconst Notification = () => {\n  const messages = useSelector(selectors.selectAll);\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {messages.map((message) => (\n        <Alert key={message.id} show variant={message.type}>\n          {message.field ? `Поле \"${t(message.field)}\" - ${t(message.defaultMessage)}` : t(message.text)}\n        </Alert>\n      ))}\n    </>\n  );\n};\n\nexport default Notification;\n","// @ts-check\n\nimport { createContext } from 'react';\n\nexport const AuthContext = createContext({});\n\nexport const ApiContext = createContext(null);\n\nexport const NotificationContext = createContext({\n  addMessage: () => {},\n  addErrors: () => {},\n  addError: () => {},\n  clean: () => {},\n});\n","// @ts-check\n\nimport { useContext } from 'react';\n\nimport { ApiContext, AuthContext, NotificationContext } from '../contexts/index.js';\n\nexport const useAuth = () => useContext(AuthContext);\nexport const useNotify = () => useContext(NotificationContext);\nexport const useValidation = () => useContext(NotificationContext);\n\nexport const useApi = () => {\n  // TODO: сделать апи\n  const api = useContext(ApiContext);\n\n  return api;\n};\n","// @ts-check\n\nimport path from 'path';\n\n// const hostname = 'localhost';\n// const port = process.env.REACT_APP_PORT || 5001;\nconst apiUrl = '/api';\nconst { host, protocol } = window.location;\nconst fullHost = `${protocol}//${host}`;\n\nconst buildUrl = (part) => () => {\n  const urlPath = path.join(apiUrl, part);\n  const url = new URL(urlPath, fullHost);\n  return url.toString();\n};\n\nconst buildLocalUrl = (part) => () => `/${part}`;\n\nconst routes = {\n  homePagePath: buildLocalUrl(''),\n  loginPagePath: buildLocalUrl('login'),\n  signupPagePath: buildLocalUrl('signup'),\n  usersPagePath: buildLocalUrl('users'),\n  userEditPagePath: (id) => `${buildLocalUrl('users')()}/${id}/edit`,\n\n  statusesPagePath: buildLocalUrl('statuses'),\n  statusPagePath: (id) => `${buildLocalUrl('statuses')()}/${id}`,\n  newStatusPagePath: () => `${buildLocalUrl('statuses')()}/new`,\n  statusEditPagePath: (id) => `${buildLocalUrl('statuses')()}/${id}/edit`,\n\n  labelsPagePath: buildLocalUrl('labels'),\n  labelPagePath: (id) => `${buildLocalUrl('labels')()}/${id}`,\n  newLabelPagePath: () => `${buildLocalUrl('labels')()}/new`,\n  labelEditPagePath: (id) => `${buildLocalUrl('labels')()}/${id}/edit`,\n\n  tasksPagePath: buildLocalUrl('tasks'),\n  taskPagePath: (id) => `${buildLocalUrl('tasks')()}/${id}`,\n  newTaskPagePath: () => `${buildLocalUrl('tasks')()}/new`,\n  taskEditPagePath: (id) => `${buildLocalUrl('tasks')()}/${id}/edit`,\n\n  apiTasks: buildUrl('tasks'),\n  apiTask: (id) => `${buildUrl('tasks')()}/${id}`,\n  apiLabels: buildUrl('labels'),\n  apiLabel: (id) => `${buildUrl('labels')()}/${id}`,\n  apiStatuses: buildUrl('statuses'),\n  apiStatus: (id) => `${buildUrl('statuses')()}/${id}`,\n  apiUsers: buildUrl('users'),\n  apiUser: (id) => `${buildUrl('users')()}/${id}`,\n  apiLogin: buildUrl('login'),\n};\n\nexport default routes;\n","// @ts-check\n\nimport React from 'react';\nimport { Navbar as BootstrapNavbar, Container, Nav } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { useAuth } from '../hooks/index.js';\nimport routes from '../routes.js';\n\nconst Navbar = () => {\n  const { logOut, user } = useAuth();\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  const onLogout = () => {\n    logOut();\n    const from = { pathname: routes.homePagePath() };\n    history.push(from, { message: 'logoutSuccess' });\n  };\n\n  return (\n    <BootstrapNavbar bg=\"light\" variant=\"light\" className=\"mb-3\">\n      <Container fluid>\n        <Nav className=\"me-auto\">\n          <Link className=\"nav-link\" to={routes.homePagePath()}>{t('hexletTodo')}</Link>\n          <Link className=\"nav-link\" to={routes.usersPagePath()}>{t('users')}</Link>\n          {!!user && <Link className=\"nav-link\" to={routes.statusesPagePath()}>{t('statuses')}</Link>}\n          {!!user && <Link className=\"nav-link\" to={routes.labelsPagePath()}>{t('labels')}</Link>}\n          {!!user && <Link className=\"nav-link\" to={routes.tasksPagePath()}>{t('tasks')}</Link>}\n        </Nav>\n        <Nav className=\"justify-content-end\">\n          {user ? (\n            <Nav.Link onClick={() => onLogout()}>{t('logout')}</Nav.Link>\n          ) : (\n            <>\n              <Link className=\"nav-link\" to={routes.loginPagePath()}>{t('login')}</Link>\n              <Link className=\"nav-link\" to={routes.signupPagePath()}>{t('signup')}</Link>\n            </>\n          )}\n        </Nav>\n      </Container>\n    </BootstrapNavbar>\n  );\n};\n\nexport default Navbar;\n","// @ts-check\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, Button } from 'react-bootstrap';\n\nconst Welcome = () => {\n  const { t } = useTranslation();\n  return (\n    <Card>\n      <Card.Body className=\"p-5 bg-light\">\n        <div className=\"display-4\">{t('welcome.title')}</div>\n        <div className=\"lead\">\n          {t('welcome.body')}\n        </div>\n        <hr />\n        <Button variant=\"primary\" href=\"https://ru.hexlet.io/\" className=\"btn-lg\">{t('welcome.buttonText')}</Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Welcome;\n","import routes from './routes.js';\n\nconst handleError = (error, notify, history, auth = null) => {\n  if ((error.response?.status === 401)\n    || (error.response?.status === 500 && error.response?.data?.message?.startsWith('JWT expired'))) {\n    const from = { pathname: routes.homePagePath() };\n    history.push(from, { message: 'accessDenied', type: 'error' });\n    auth.logOut();\n  } else if (error.response?.status === 422 && Array.isArray(error.response.data)) {\n    notify.addErrors(error.response.data);\n  } else {\n    notify.addErrors([{ text: error.message }]);\n  }\n};\n\nexport default handleError;\n","// @ts-check\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport handleError from '../utils.js';\nimport { useAuth, useNotify } from '../hooks/index.js';\nimport routes from '../routes.js';\n\nconst getValidationSchema = () => yup.object().shape({});\n\nconst Login = () => {\n  const { t } = useTranslation();\n\n  const auth = useAuth();\n  const notify = useNotify();\n  const history = useHistory();\n\n  const f = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: getValidationSchema(),\n    onSubmit: async (formData, { setSubmitting, setErrors }) => {\n      try {\n        const userData = { email: formData.email, password: formData.password };\n        const { data: token } = await axios.post(routes.apiLogin(), userData);\n\n        auth.logIn({ ...formData, token });\n        const { from } = { from: { pathname: routes.homePagePath() } };\n        history.push(from, { message: 'loginSuccess' });\n      } catch (e) {\n        if (e.response?.status === 422 && Array.isArray(e.response.data)) {\n          const errors = e.response.data\n            .reduce((acc, err) => ({ ...acc, [err.field]: err.defaultMessage }), {});\n          setErrors(errors);\n        } else if (e.response?.status === 401) {\n          notify.addErrors([{ text: 'loginFail' }]);\n        } else {\n          handleError(e, notify, history, auth);\n        }\n        setSubmitting(false);\n      }\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n  return (\n    <>\n      <h1 className=\"my-4\">{t('login')}</h1>\n      <Form onSubmit={f.handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"email\">{t('email')}</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={f.values.email}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.email && f.touched.email}\n            id=\"email\"\n            name=\"email\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.email)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"password\">{t('password')}</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={f.values.password}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.password && f.touched.password}\n            id=\"password\"\n            name=\"password\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.password)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          {t('enter')}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default Login;\n","import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\n\nimport getLogger from '../lib/logger.js';\n\nconst log = getLogger('slice users');\nlog.enabled = true;\n\nconst adapter = createEntityAdapter();\nconst initialState = adapter.getInitialState();\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUsers: adapter.addMany,\n    addUser: adapter.addOne,\n    updateUser(state, { payload }) {\n      adapter.updateOne(state, { id: payload.id, changes: payload });\n    },\n    removeUser: adapter.removeOne,\n  },\n});\n\nexport const selectors = adapter.getSelectors((state) => state.users);\nexport const { actions } = usersSlice;\nexport default usersSlice.reducer;\n","// @ts-check\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-dom';\n\nimport handleError from '../utils.js';\nimport { actions as usersActions } from '../slices/usersSlice.js';\nimport { useNotify } from '../hooks/index.js';\nimport routes from '../routes.js';\n\nimport getLogger from '../lib/logger.js';\n\nconst log = getLogger('registration');\nlog.enabled = true;\n\nconst getValidationSchema = () => yup.object().shape({});\n\nconst Registration = () => {\n  const { t } = useTranslation();\n  const notify = useNotify();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const f = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: getValidationSchema(),\n    onSubmit: async (userData, { setSubmitting, setErrors }) => {\n      try {\n        const user = {\n          ...userData,\n        };\n        const { data } = await axios.post(routes.apiUsers(), user);\n\n        dispatch(usersActions.addUser(data));\n        const from = { pathname: routes.loginPagePath() };\n        history.push(from, { message: 'registrationSuccess' });\n      } catch (e) {\n        log('create.error', e);\n        setSubmitting(false);\n        if (e.response?.status === 422 && Array.isArray(e.response.data)) {\n          const errors = e.response.data\n            .reduce((acc, err) => ({ ...acc, [err.field]: err.defaultMessage }), {});\n          setErrors(errors);\n          notify.addError('registrationFail');\n        } else {\n          handleError(e, notify, history);\n        }\n      }\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n\n  return (\n    <>\n      <h1 className=\"my-4\">{t('signup')}</h1>\n      <Form onSubmit={f.handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"firstName\">{t('name')}</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={f.values.firstName}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.firstName && f.touched.firstName}\n            id=\"firstName\"\n            name=\"firstName\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.firstName)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"lastName\">{t('surname')}</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={f.values.lastName}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.lastName && f.touched.lastName}\n            id=\"lastName\"\n            name=\"lastName\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.lastName)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"email\">{t('email')}</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={f.values.email}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.email && f.touched.email}\n            id=\"email\"\n            name=\"email\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.email)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"password\">{t('password')}</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={f.values.password}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.password && f.touched.password}\n            id=\"password\"\n            name=\"password\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.password)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          {t('save')}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default Registration;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"text-center\">\n      <img alt={t('notFound.header')} className=\"img-fluid h-25\" src=\"https://cdn2.hexlet.io/assets/error-pages/404-4b6ef16aba4c494d8101c104236304e640683fa9abdb3dd7a46cab7ad05d46e9.svg\" />\n      <h1 className=\"h4 text-muted\">\n        {t('notFound.header')}\n      </h1>\n      <p className=\"text-muted\">\n        {t('notFound.message')}\n        <Link to=\"/\">{t('notFound.linkText')}</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","// @ts-check\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Table, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { useAuth, useNotify } from '../../hooks/index.js';\nimport routes from '../../routes.js';\nimport handleError from '../../utils.js';\nimport { actions, selectors } from '../../slices/usersSlice.js';\n\nimport getLogger from '../../lib/logger.js';\n\nconst log = getLogger('user');\nlog.enabled = true;\n\nconst UsersComponent = () => {\n  const { t } = useTranslation();\n  const auth = useAuth();\n  const notify = useNotify();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const users = useSelector(selectors.selectAll);\n\n  const removeUserHandler = async (event, id) => {\n    log(event, id);\n    event.preventDefault();\n    try {\n      await axios.delete(routes.apiUser(id), { headers: auth.getAuthHeader() });\n      auth.logOut();\n      log('success');\n      notify.addMessage('userDeleted');\n      dispatch(actions.removeUser(id));\n    } catch (e) {\n      if (e.response?.status === 403) {\n        notify.addErrors([{ text: 'userDeleteDenied' }]);\n      } else {\n        handleError(e, notify, history, auth);\n      }\n    }\n  };\n\n  if (!users) {\n    return null;\n  }\n\n  return (\n    <Table striped hover>\n      <thead>\n        <tr>\n          <th>{t('id')}</th>\n          <th>{t('fullName')}</th>\n          <th>{t('email')}</th>\n          <th>{t('createDate')}</th>\n          <th>{null}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users.map((user) => (\n          <tr key={user.id}>\n            <td>{user.id}</td>\n            <td>{`${user.firstName} ${user.lastName}`}</td>\n            <td>{user.email}</td>\n            <td>{new Date(user.createdAt).toLocaleString('ru')}</td>\n            <td>\n              <Link to={routes.userEditPagePath(user.id)}>{t('edit')}</Link>\n              <Form onSubmit={(event) => removeUserHandler(event, user.id)}>\n                <Button type=\"submit\" variant=\"link\">Удалить</Button>\n              </Form>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default UsersComponent;\n","// @ts-check\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { actions as usersActions, selectors } from '../../slices/usersSlice.js';\nimport handleError from '../../utils.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\nimport routes from '../../routes.js';\n\nimport getLogger from '../../lib/logger.js';\n\nconst log = getLogger('edit user');\nlog.enabled = true;\n\nconst getValidationSchema = () => yup.object().shape({});\n\nconst EditUser = () => {\n  const { t } = useTranslation();\n  const auth = useAuth();\n  const history = useHistory();\n  const params = useParams();\n  const notify = useNotify();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => selectors.selectById(state, params.userId));\n\n  const f = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      password: '',\n    },\n    validationSchema: getValidationSchema(),\n    onSubmit: async (userData, { setSubmitting, setErrors, resetForm }) => {\n      try {\n        const newUser = {\n          id: params.userId,\n          ...userData,\n        };\n        log('user.edit', newUser);\n        await axios.put(routes.apiUser(params.userId), newUser, { headers: auth.getAuthHeader() });\n        auth.update(newUser);\n        dispatch(usersActions.updateUser(newUser));\n        resetForm();\n        const from = { pathname: routes.usersPagePath() };\n        history.push(from, { message: 'userEdited' });\n      } catch (e) {\n        log('user.edit.error', e);\n        setSubmitting(false);\n        if (e.response?.status === 422 && Array.isArray(e.response?.data)) {\n          const errors = e.response.data\n            .reduce((acc, err) => ({ ...acc, [err.field]: err.defaultMessage }), {});\n          setErrors(errors);\n          notify.addError('userEditFail');\n        } else if (e.response?.status === 403) {\n          notify.addErrors([{ text: 'userDeleteDenied' }]);\n        } else {\n          handleError(e, notify, history);\n        }\n      }\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n\n  if (!user) {\n    return null;\n  }\n\n  if (user.email !== auth.user.email) {\n    const from = { pathname: routes.usersPagePath() };\n    history.push(from, { message: 'userEditDenied', type: 'error' });\n    return null;\n  }\n\n  return (\n    <>\n      <h1 className=\"my-4\">{t('userEdit')}</h1>\n      <Form onSubmit={f.handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"firstName\">{t('name')}</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={f.values.firstName}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.firstName && f.touched.firstName}\n            id=\"firstName\"\n            name=\"firstName\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.firstName)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"lastName\">{t('surname')}</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={f.values.lastName}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.lastName && f.touched.lastName}\n            id=\"lastName\"\n            name=\"lastName\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.lastName)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"email\">{t('email')}</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={f.values.email}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.email && f.touched.email}\n            id=\"email\"\n            name=\"email\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.email)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"password\">{t('password')}</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={f.values.password}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.password && f.touched.password}\n            id=\"password\"\n            name=\"password\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.password)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          {t('edit')}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default EditUser;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\n\nimport getLogger from '../lib/logger.js';\n\nconst log = getLogger('slice taskStatuses');\nlog.enabled = true;\n\nconst adapter = createEntityAdapter();\nconst initialState = adapter.getInitialState();\n\nexport const taskStatusesSlice = createSlice({\n  name: 'taskStatuses',\n  initialState,\n  reducers: {\n    addTaskStatuses: adapter.addMany,\n    addTaskStatus: adapter.addOne,\n    updateTaskStatus(state, { payload }) {\n      adapter.updateOne(state, { id: payload.id, changes: payload });\n    },\n    removeTaskStatus: adapter.removeOne,\n  },\n});\n\nexport const selectors = adapter.getSelectors((state) => state.taskStatuses);\nexport const { actions } = taskStatusesSlice;\nexport default taskStatusesSlice.reducer;\n","// @ts-check\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Table, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { actions, selectors } from '../../slices/taskStatusesSlice.js';\nimport handleError from '../../utils.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\nimport routes from '../../routes.js';\n\nconst Statuses = () => {\n  const { t } = useTranslation();\n  const auth = useAuth();\n  const notify = useNotify();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const taskStatuses = useSelector(selectors.selectAll);\n\n  if (!taskStatuses) {\n    return null;\n  }\n\n  const removeStatus = async (event, id) => {\n    event.preventDefault();\n    try {\n      await axios.delete(routes.apiStatus(id), { headers: auth.getAuthHeader() });\n      dispatch(actions.removeTaskStatus(id));\n      notify.addMessage('statusRemoved');\n    } catch (e) {\n      if (e.response?.status === 422) {\n        notify.addError('taskStatusRemoveFail');\n      } else {\n        handleError(e, notify, history, auth);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Link to={routes.newStatusPagePath()}>{t('createStatus')}</Link>\n      <Table striped hover>\n        <thead>\n          <tr>\n            <th>{t('id')}</th>\n            <th>{t('statusName')}</th>\n            <th>{t('createDate')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {taskStatuses.map((status) => (\n            <tr key={status.id}>\n              <td>{status.id}</td>\n              <td>{status.name}</td>\n              <td>{new Date(status.createdAt).toLocaleString('ru')}</td>\n              <td>\n                <Link to={routes.statusEditPagePath(status.id)}>{t('edit')}</Link>\n                <Form onSubmit={(event) => removeStatus(event, status.id)}>\n                  <Button type=\"submit\" variant=\"link\">{t('remove')}</Button>\n                </Form>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default Statuses;\n","// @ts-check\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { actions as taskStatusesActions } from '../../slices/taskStatusesSlice.js';\nimport routes from '../../routes.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\nimport handleError from '../../utils.js';\n\nimport getLogger from '../../lib/logger.js';\n\nconst log = getLogger('client');\n\nconst getValidationSchema = () => yup.object().shape({});\n\nconst EditStatus = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const params = useParams();\n  const auth = useAuth();\n  const notify = useNotify();\n  const [taskStatus, setTaskStatus] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(routes.apiStatus(params.taskStatusId),\n          { headers: auth.getAuthHeader() });\n        setTaskStatus(data);\n      } catch (e) {\n        handleError(e, notify, history, auth);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const f = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: taskStatus ? taskStatus.name : '',\n    },\n    validationSchema: getValidationSchema(),\n    onSubmit: async ({ name }, { setSubmitting, setErrors }) => {\n      const newStatus = { name };\n      try {\n        const { data } = await axios.put(routes.apiStatus(params.taskStatusId),\n          newStatus, { headers: auth.getAuthHeader() });\n        log('status.edit', newStatus);\n\n        dispatch(taskStatusesActions.updateTaskStatus(data));\n        const from = { pathname: routes.statusesPagePath() };\n        history.push(from, { message: 'statusEdited' });\n      } catch (e) {\n        log('label.edit.error', e);\n        setSubmitting(false);\n        if (e.response?.status === 422 && Array.isArray(e.response?.data)) {\n          const errors = e.response.data\n            .reduce((acc, err) => ({ ...acc, [err.field]: err.defaultMessage }), {});\n          setErrors(errors);\n          notify.addError('taskStatusEditFail');\n        } else {\n          handleError(e, notify, history);\n        }\n      }\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n\n  if (!taskStatus) {\n    return null;\n  }\n\n  return (\n    <>\n      <h1 className=\"my-4\">{t('statusEdit')}</h1>\n      <Form onSubmit={f.handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"name\">{t('naming')}</Form.Label>\n          <Form.Control\n            className=\"mb-2\"\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            value={f.values.name}\n            isInvalid={f.errors.name && f.touched.name}\n            name=\"name\"\n            id=\"name\"\n            type=\"text\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.name)}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" disabled={f.isSubmitting}>\n          {t('edit')}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default EditStatus;\n","// @ts-check\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { actions as taskStatusesActions } from '../../slices/taskStatusesSlice.js';\nimport routes from '../../routes.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\n\nimport handleError from '../../utils.js';\nimport getLogger from '../../lib/logger.js';\n\nconst log = getLogger('client');\n\nconst getValidationSchema = () => yup.object().shape({});\n\nconst NewStatus = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const auth = useAuth();\n  const notify = useNotify();\n  const dispatch = useDispatch();\n\n  const f = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: getValidationSchema(),\n    onSubmit: async ({ name }, { setSubmitting, setErrors }) => {\n      const status = { name };\n      try {\n        log('status.create', status);\n        const { data } = await axios\n          .post(routes.apiStatuses(), status, { headers: auth.getAuthHeader() });\n        dispatch(taskStatusesActions.addTaskStatus(data));\n        const from = { pathname: routes.statusesPagePath() };\n        history.push(from, { message: 'statusCreated' });\n      } catch (e) {\n        log('label.create.error', e);\n        setSubmitting(false);\n        if (e.response?.status === 422 && Array.isArray(e.response?.data)) {\n          const errors = e.response.data\n            .reduce((acc, err) => ({ ...acc, [err.field]: err.defaultMessage }), {});\n          setErrors(errors);\n          notify.addError('taskStatusCreateFail');\n        } else {\n          handleError(e, notify, history, auth);\n        }\n      }\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n\n  return (\n    <>\n      <h1 className=\"my-4\">{t('statusCreating')}</h1>\n      <Form onSubmit={f.handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"name\">{t('naming')}</Form.Label>\n          <Form.Control\n            className=\"mb-2\"\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            value={f.values.name}\n            isInvalid={f.errors.name && f.touched.name}\n            name=\"name\"\n            id=\"name\"\n            type=\"text\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.name)}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" disabled={f.isSubmitting}>\n          {t('create')}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default NewStatus;\n","import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\n\nimport getLogger from '../lib/logger.js';\n\nconst log = getLogger('slice labels');\nlog.enabled = true;\n\nconst adapter = createEntityAdapter();\nconst initialState = adapter.getInitialState();\n\nexport const labelsSlice = createSlice({\n  name: 'labels',\n  initialState,\n  reducers: {\n    addLabels: adapter.addMany,\n    addLabel: adapter.addOne,\n    updateLabel(state, { payload }) {\n      adapter.updateOne(state, { id: payload.id, changes: payload });\n    },\n    removeLabel: adapter.removeOne,\n  },\n});\n\nexport const selectors = adapter.getSelectors((state) => state.labels);\nexport const { actions } = labelsSlice;\nexport default labelsSlice.reducer;\n","// @ts-check\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Table, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { actions as labelsActions, selectors } from '../../slices/labelsSlice.js';\nimport handleError from '../../utils.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\nimport routes from '../../routes.js';\n\nimport getLogger from '../../lib/logger.js';\n\nconst log = getLogger('labels');\nlog.enabled = true;\n\nconst Labels = () => {\n  const { t } = useTranslation();\n  const labels = useSelector(selectors.selectAll);\n  const auth = useAuth();\n  const notify = useNotify();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const removeLabel = async (event, id) => {\n    event.preventDefault();\n    try {\n      await axios.delete(routes.apiLabel(id), { headers: auth.getAuthHeader() });\n      dispatch(labelsActions.removeLabel(id));\n      notify.addMessage('labelRemoved');\n    } catch (e) {\n      if (e.response.status === 422) {\n        notify.addError('labelRemoveFail');\n      } else {\n        handleError(e, notify, history, auth);\n      }\n    }\n  };\n\n  if (!labels) {\n    return null;\n  }\n\n  return (\n    <>\n      <Link to={routes.newLabelPagePath()}>{t('createLabel')}</Link>\n      <Table striped hover>\n        <thead>\n          <tr>\n            <th>{t('id')}</th>\n            <th>{t('statusName')}</th>\n            <th>{t('createDate')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {labels.map((label) => (\n            <tr key={label.id}>\n              <td>{label.id}</td>\n              <td>{label.name}</td>\n              <td>{new Date(label.createdAt).toLocaleString('ru')}</td>\n              <td>\n                <Link to={routes.labelEditPagePath(label.id)}>{t('edit', { defaultValue: 'Изменить' })}</Link>\n                <Form onSubmit={(event) => removeLabel(event, label.id)}>\n                  <Button type=\"submit\" variant=\"link\">Удалить</Button>\n                </Form>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default Labels;\n","// @ts-check\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useParams, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { actions as labelsActions } from '../../slices/labelsSlice.js';\nimport handleError from '../../utils.js';\nimport routes from '../../routes.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\n\nimport getLogger from '../../lib/logger.js';\n\nconst log = getLogger('client');\n\nconst getValidationSchema = () => yup.object().shape({});\n\nconst EditLabel = () => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const history = useHistory();\n  const auth = useAuth();\n  const notify = useNotify();\n  const [label, setLabel] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(routes.apiLabel(params.labelId),\n          { headers: auth.getAuthHeader() });\n        setLabel(data);\n      } catch (e) {\n        handleError(e, notify, history);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const f = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: label ? label.name : '',\n    },\n    validationSchema: getValidationSchema(),\n    onSubmit: async ({ name }, { setSubmitting, setErrors }) => {\n      const newLabel = { name };\n      try {\n        log('label.edit', label);\n        const { data } = await axios.put(routes.apiLabel(params.labelId),\n          newLabel, { headers: auth.getAuthHeader() });\n        dispatch(labelsActions.updateLabel(data));\n        const from = { pathname: routes.labelsPagePath() };\n        history.push(from, { message: 'labelEdited' });\n      } catch (e) {\n        log('label.edit.error', e);\n        setSubmitting(false);\n        if (e.response?.status === 422 && Array.isArray(e.response?.data)) {\n          const errors = e.response.data\n            .reduce((acc, err) => ({ ...acc, [err.field]: err.defaultMessage }), {});\n          setErrors(errors);\n          notify.addError('labelEditFail');\n        } else {\n          handleError(e, notify, history, auth);\n        }\n      }\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n\n  if (!label) {\n    return null;\n  }\n\n  return (\n    <>\n      <h1 className=\"my-4\">{t('labelEdit')}</h1>\n      <Form onSubmit={f.handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"name\">{t('naming')}</Form.Label>\n          <Form.Control\n            className=\"mb-2\"\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            value={f.values.name}\n            isInvalid={f.errors.name && f.touched.name}\n            name=\"name\"\n            id=\"name\"\n            type=\"text\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.name)}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" disabled={f.isSubmitting}>\n          {t('edit')}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default EditLabel;\n","// @ts-check\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport { actions as labelsActions } from '../../slices/labelsSlice.js';\nimport routes from '../../routes.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\n\nimport handleError from '../../utils.js';\nimport getLogger from '../../lib/logger.js';\n\nconst log = getLogger('client');\n\nconst getValidationSchema = () => yup.object().shape({});\n\nconst NewLabel = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const auth = useAuth();\n  const notify = useNotify();\n  const dispatch = useDispatch();\n\n  const f = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: getValidationSchema(),\n    onSubmit: async ({ name }, { setSubmitting, setErrors }) => {\n      const label = { name };\n      try {\n        log('label.create', label);\n\n        const { data } = await axios\n          .post(routes.apiLabels(), label, { headers: auth.getAuthHeader() });\n        dispatch(labelsActions.addLabel(data));\n        const from = { pathname: routes.labelsPagePath() };\n        history.push(from, { message: 'labelCreated' });\n      } catch (e) {\n        log('label.create.error', e);\n        setSubmitting(false);\n        if (e.response?.status === 422 && Array.isArray(e.response?.data)) {\n          const errors = e.response.data\n            .reduce((acc, err) => ({ ...acc, [err.field]: err.defaultMessage }), {});\n          setErrors(errors);\n          notify.addError('labelCreateFail');\n        } else {\n          handleError(e, notify, history, auth);\n        }\n      }\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n\n  return (\n    <>\n      <h1 className=\"my-4\">{t('labelCreating')}</h1>\n      <Form onSubmit={f.handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"name\">{t('naming')}</Form.Label>\n          <Form.Control\n            className=\"mb-2\"\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            value={f.values.name}\n            isInvalid={f.errors.name && f.touched.name}\n            name=\"name\"\n            id=\"name\"\n            type=\"text\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.name)}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" disabled={f.isSubmitting}>\n          {t('create')}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default NewLabel;\n","import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\n\nimport getLogger from '../lib/logger.js';\n\nconst log = getLogger('slice tasks');\nlog.enabled = true;\n\nconst adapter = createEntityAdapter();\nconst initialState = adapter.getInitialState();\n\nexport const tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTasks: adapter.addMany,\n    addTask: adapter.addOne,\n    updateTask(state, { payload }) {\n      adapter.updateOne(state, { id: payload.id, changes: payload });\n    },\n    removeTask: adapter.removeOne,\n  },\n});\n\nexport const selectors = adapter.getSelectors((state) => state.tasks);\nexport const { actions } = tasksSlice;\nexport default tasksSlice.reducer;\n","// @ts-check\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport {\n  Card, Button, Container, Row, Col, Form,\n} from 'react-bootstrap';\nimport axios from 'axios';\n\nimport { actions as tasksActions } from '../../slices/tasksSlice.js';\nimport handleError from '../../utils.js';\nimport routes from '../../routes.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\n\nimport getLogger from '../../lib/logger.js';\n\nconst log = getLogger('client');\nlog.enabled = true;\n\nconst Task = () => {\n  const { t } = useTranslation();\n  const params = useParams();\n  const auth = useAuth();\n  const notify = useNotify();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [task, setTask] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: taskData } = await axios.get(routes.apiTask(params.taskId),\n          { headers: auth.getAuthHeader() });\n        setTask(taskData);\n      } catch (e) {\n        handleError(e, notify, history);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  if (!task) {\n    return null;\n  }\n\n  const removeTask = async (event, id) => {\n    event.preventDefault();\n    try {\n      await axios.delete(routes.apiTask(id), { headers: auth.getAuthHeader() });\n      dispatch(tasksActions.removeTask(id));\n      const from = { pathname: routes.tasksPagePath() };\n      history.push(from, { message: 'taskRemoved' });\n    } catch (e) {\n      handleError(e, notify, history, auth);\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"bg-secondary text-white\">\n        <Card.Title>{task.name}</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        <p>{task.description}</p>\n        <Container>\n          <Row>\n            <Col>\n              {t('author')}\n            </Col>\n            <Col>\n              {`${task.author.firstName} ${task.author.lastName}`}\n            </Col>\n          </Row>\n          {task.executor && (\n            <Row>\n              <Col>\n                {t('executor')}\n              </Col>\n              <Col>\n                {`${task.executor.firstName} ${task.executor.lastName}`}\n              </Col>\n            </Row>\n          )}\n          <Row>\n            <Col>\n              {t('status')}\n            </Col>\n            <Col>\n              {task.taskStatus.name}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {t('createDate')}\n            </Col>\n            <Col>\n              {new Date(task.createdAt).toLocaleString('ru')}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {t('labels')}\n              :\n              <ul>\n                {task.labels?.map((label) => (<li key={label.id}>{label.name}</li>))}\n              </ul>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Link to={routes.taskEditPagePath(task.id)}>{t('edit')}</Link>\n              <Form onSubmit={(e) => removeTask(e, task.id)}>\n                <Button type=\"submit\" variant=\"link\">Удалить</Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Task;\n","// @ts-check\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Card, Button, Col, Form, Row,\n} from 'react-bootstrap';\n\nimport handleError from '../../utils.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\nimport routes from '../../routes.js';\nimport { selectors as userSelectors } from '../../slices/usersSlice.js';\nimport { selectors as labelSelectors } from '../../slices/labelsSlice.js';\nimport { selectors as taskStatuseSelectors } from '../../slices/taskStatusesSlice.js';\n\nconst TaskFilter = (props) => {\n  const { foundTasks: handler } = props;\n  const auth = useAuth();\n  const history = useHistory();\n  const { t } = useTranslation();\n  const notify = useNotify();\n  const { executors, labels, taskStatuses } = useSelector((state) => ({\n    executors: userSelectors.selectAll(state),\n    labels: labelSelectors.selectAll(state),\n    taskStatuses: taskStatuseSelectors.selectAll(state),\n  }));\n\n  const f = useFormik({\n    initialValues: {\n      taskStatusId: null,\n      executorId: null,\n      labelId: null,\n      isMyTasks: false,\n    },\n    onSubmit: async (formData, { setSubmitting }) => {\n      notify.clean();\n      try {\n        const params = {};\n        if (formData.isMyTasks) {\n          const author = executors.find((user) => user.email === auth.user?.email);\n          params.authorId = author.id;\n        }\n\n        if (formData.taskStatusId) {\n          params.taskStatus = formData.taskStatusId;\n        }\n\n        if (formData.executorId) {\n          params.executorId = formData.executorId;\n        }\n\n        if (formData.labelId) {\n          params.labelsId = formData.labelId;\n        }\n\n        const { data: response } = await axios\n          .get(routes.apiTasks(), { params, headers: auth.getAuthHeader() });\n\n        handler(response);\n      } catch (e) {\n        setSubmitting(false);\n        handleError(e, notify, history, auth);\n      }\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n\n  if (!executors || !labels || !taskStatuses) {\n    return null;\n  }\n\n  return (\n    <Card bg=\"light\">\n      <Card.Body>\n        <Form onSubmit={f.handleSubmit}>\n          <Row className=\"g-2\">\n            <Col md>\n              <Form.Group className=\"mb-3\">\n                <Form.Label htmlFor=\"taskStatusId\">{t('status')}</Form.Label>\n                <Form.Select\n                  nullable\n                  value={f.values.taskStatusId}\n                  disabled={f.isSubmitting}\n                  onChange={f.handleChange}\n                  onBlur={f.handleBlur}\n                  isInvalid={f.errors.taskStatusId && f.touched.taskStatusId}\n                  id=\"taskStatusId\"\n                  name=\"taskStatusId\"\n                >\n                  <option value=\"\">{null}</option>\n                  {taskStatuses.map((status) => (\n                    <option key={status.id} value={status.id}>\n                      {status.name}\n                    </option>\n                  ))}\n                </Form.Select>\n              </Form.Group>\n            </Col>\n            <Col md>\n              <Form.Group className=\"mb-3\">\n                <Form.Label htmlFor=\"executorId\">{t('executor')}</Form.Label>\n                <Form.Select\n                  nullable\n                  value={f.values.executorId}\n                  disabled={f.isSubmitting}\n                  onChange={f.handleChange}\n                  onBlur={f.handleBlur}\n                  isInvalid={f.errors.executorId && f.touched.executorId}\n                  id=\"executorId\"\n                  name=\"executorId\"\n                >\n                  <option value=\"\">{null}</option>\n                  {executors.map((executor) => (\n                    <option key={executor.id} value={executor.id}>\n                      {`${executor.firstName} ${executor.lastName}`}\n                    </option>\n                  ))}\n                </Form.Select>\n              </Form.Group>\n            </Col>\n            <Col md>\n              <Form.Group className=\"mb-3\">\n                <Form.Label htmlFor=\"labelId\">{t('label')}</Form.Label>\n                <Form.Select\n                  nullable\n                  value={f.values.labelId}\n                  disabled={f.isSubmitting}\n                  onChange={f.handleChange}\n                  onBlur={f.handleBlur}\n                  isInvalid={f.errors.labelId && f.touched.labelId}\n                  id=\"labelId\"\n                  name=\"labelId\"\n                >\n                  <option value=\"\">{null}</option>\n                  {labels.map((label) => (\n                    <option key={label.id} value={label.id}>{label.name}</option>\n                  ))}\n                </Form.Select>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Form.Group className=\"mb-3\">\n            <Form.Check\n              type=\"checkbox\"\n              label={t('isMyTasks')}\n              onChange={f.handleChange}\n              value={f.values.isMyTasks}\n              id=\"isMyTasks\"\n              name=\"isMyTasks\"\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            {t('show')}\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TaskFilter;\n","// @ts-check\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Table, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport handleError from '../../utils.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\nimport routes from '../../routes.js';\nimport TaskFilter from './TaskFilter.jsx';\nimport { actions as taskActions, selectors as tasksSelectors } from '../../slices/tasksSlice.js';\n\nimport { selectors as userSelectors } from '../../slices/usersSlice.js';\nimport { selectors as taskStatuseSelectors } from '../../slices/taskStatusesSlice.js';\n\nconst Tasks = () => {\n  const { t } = useTranslation();\n  // const tasks = useSelector(tasksSelectors.selectAll);\n  const [filteredTasks, setFilteredTasks] = useState(null);\n  const auth = useAuth();\n  const notify = useNotify();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { executors, taskStatuses, tasks } = useSelector((state) => ({\n    executors: userSelectors.selectAll(state),\n    taskStatuses: taskStatuseSelectors.selectAll(state),\n    tasks: tasksSelectors.selectAll(state),\n  }));\n\n  if (!tasks) {\n    return null;\n  }\n\n  const removeTask = async (event, id) => {\n    event.preventDefault();\n    try {\n      await axios.delete(routes.apiTask(id), { headers: auth.getAuthHeader() });\n      dispatch(taskActions.removeTask((id)));\n      notify.addMessage('taskRemoved');\n    } catch (e) {\n      if (e.response?.status === 403) {\n        notify.addErrors([{ text: t('taskEditDenied') }]);\n      } else if (e.response?.status === 422) {\n        notify.addError('taskRemoveFail');\n      } else {\n        handleError(e, notify, history, auth);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Link to={routes.newTaskPagePath()}>{t('createTask')}</Link>\n      <TaskFilter foundTasks={setFilteredTasks} />\n      <Table striped hover>\n        <thead>\n          <tr>\n            <th>{t('id')}</th>\n            <th>{t('naming')}</th>\n            <th>{t('status')}</th>\n            <th>{t('author')}</th>\n            <th>{t('executor')}</th>\n            <th>{t('createDate')}</th>\n            <th>{null}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {(filteredTasks ?? tasks).map((task) => {\n            const executor = task.executor ? executors\n              .find((item) => item.id.toString() === task.executor.id.toString()) : null;\n            const author = executors\n              .find((item) => item.id.toString() === task.author.id.toString());\n            const taskStatus = taskStatuses\n              .find((item) => item.id.toString() === task.taskStatus.id.toString());\n            return (\n              <tr key={task.id}>\n                <td>{task.id}</td>\n                <td>\n                  <Link to={routes.taskPagePath(task.id)}>{task.name}</Link>\n                </td>\n                <td>{taskStatus.name}</td>\n                <td>{`${author.firstName} ${author.lastName}`}</td>\n                <td>{executor ? `${executor.firstName} ${executor.lastName}` : ''}</td>\n                <td>{new Date(task.createdAt).toLocaleString('ru')}</td>\n                <td>\n                  <Link to={routes.taskEditPagePath(task.id)}>{t('edit')}</Link>\n                  <Form onSubmit={(event) => removeTask(event, task.id)}>\n                    <Button type=\"submit\" variant=\"link\">{t('remove')}</Button>\n                  </Form>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default Tasks;\n","// @ts-check\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\n\nimport { actions as tasksActions } from '../../slices/tasksSlice.js';\nimport routes from '../../routes.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\nimport handleError from '../../utils.js';\nimport { selectors as userSelectors } from '../../slices/usersSlice.js';\nimport { selectors as labelSelectors } from '../../slices/labelsSlice.js';\nimport { selectors as taskStatuseSelectors } from '../../slices/taskStatusesSlice.js';\n\nimport getLogger from '../../lib/logger.js';\n\nconst log = getLogger('client');\nlog.enabled = true;\n\nconst getValidationSchema = () => yup.object().shape({});\n\nconst NewTask = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n  const { executors, labels, taskStatuses } = useSelector((state) => ({\n    executors: userSelectors.selectAll(state),\n    labels: labelSelectors.selectAll(state),\n    taskStatuses: taskStatuseSelectors.selectAll(state),\n  }));\n\n  const auth = useAuth();\n  const notify = useNotify();\n\n  const f = useFormik({\n    initialValues: {\n      name: '',\n      description: '',\n      taskStatusId: null,\n      executorId: null,\n      labelIds: [],\n    },\n    validationSchema: getValidationSchema(),\n    onSubmit: async (taskData, { setSubmitting, setErrors }) => {\n      try {\n        const requestTask = {\n          name: taskData.name,\n          description: taskData.description,\n          executorId: parseInt(taskData.executorId, 10),\n          taskStatusId: parseInt(taskData.taskStatusId, 10),\n          labelIds: taskData.labelIds.map((id) => parseInt(id, 10)),\n        };\n        const { data } = await axios\n          .post(routes.apiTasks(), requestTask, { headers: auth.getAuthHeader() });\n        // data.taskStatus = taskStatuses.find((item) => item.id === data.taskStatus.id);\n        log('task.create', data);\n        dispatch(tasksActions.addTask(data));\n        const from = { pathname: routes.tasksPagePath() };\n        history.push(from, { message: 'taskCreated' });\n      } catch (e) {\n        log('task.create.error', e);\n        setSubmitting(false);\n        if (e.response?.status === 422 && Array.isArray(e.response?.data)) {\n          const errors = e.response.data\n            .reduce((acc, err) => ({ ...acc, [err.field]: err.defaultMessage }), {});\n          setErrors(errors);\n          notify.addError('taskCreateFail');\n        } else {\n          handleError(e, notify, history, auth);\n        }\n      }\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n\n  return (\n    <>\n      <h1 className=\"my-4\">{t('taskCreating')}</h1>\n      <Form onSubmit={f.handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"name\">{t('naming')}</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={f.values.name}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.name && f.touched.name}\n            id=\"name\"\n            name=\"name\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.name)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"description\">{t('description')}</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            value={f.values.description}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.description && f.touched.description}\n            id=\"description\"\n            name=\"description\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.description)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"taskStatusId\">{t('status')}</Form.Label>\n          <Form.Select\n            nullable\n            value={f.values.taskStatusId}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.taskStatusId && f.touched.taskStatusId}\n            id=\"taskStatusId\"\n            name=\"taskStatusId\"\n          >\n            <option value=\"\">{null}</option>\n            {taskStatuses\n              .map((status) => <option key={status.id} value={status.id}>{status.name}</option>)}\n          </Form.Select>\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.taskStatusId)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"executorId\">{t('executor')}</Form.Label>\n          <Form.Select\n            multiple\n            value={f.values.executorId}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.executorId && f.touched.executorId}\n            id=\"executorId\"\n            name=\"executorId\"\n          >\n            <option value=\"\">{null}</option>\n            {executors.map((executor) => <option key={executor.id} value={executor.id}>{`${executor.firstName} ${executor.lastName}`}</option>)}\n          </Form.Select>\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.executorId)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"labelIds\">{t('labels')}</Form.Label>\n          <Form.Select\n            multiple\n            value={f.values.labelIds}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.labelIds && f.touched.labelIds}\n            id=\"labelIds\"\n            name=\"labelIds\"\n          >\n            {labels.map((label) => <option key={label.id} value={label.id}>{label.name}</option>)}\n          </Form.Select>\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.labelIds)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          {t('create')}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default NewTask;\n","// @ts-check\n/* eslint-disable react-hooks/rules-of-hooks */\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Form, Button } from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport { useParams, useHistory } from 'react-router-dom';\nimport * as yup from 'yup';\nimport axios from 'axios';\n\nimport { actions as tasksActions } from '../../slices/tasksSlice.js';\nimport handleError from '../../utils.js';\nimport routes from '../../routes.js';\nimport { useAuth, useNotify } from '../../hooks/index.js';\nimport { selectors as userSelectors } from '../../slices/usersSlice.js';\nimport { selectors as labelSelectors } from '../../slices/labelsSlice.js';\nimport { selectors as taskStatuseSelectors } from '../../slices/taskStatusesSlice.js';\n\nimport getLogger from '../../lib/logger.js';\n\nconst log = getLogger('edit task');\nlog.enabled = true;\n\nconst getValidationSchema = () => yup.object().shape({});\n\nconst EditTask = () => {\n  const { t } = useTranslation();\n  const { executors, labels, taskStatuses } = useSelector((state) => ({\n    executors: userSelectors.selectAll(state),\n    labels: labelSelectors.selectAll(state),\n    taskStatuses: taskStatuseSelectors.selectAll(state),\n  }));\n\n  const [task, setTask] = useState(null);\n  const params = useParams();\n  const auth = useAuth();\n  const notify = useNotify();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: currentTaskData } = await axios.get(routes.apiTask(params.taskId),\n          { headers: auth.getAuthHeader() });\n        setTask(currentTaskData);\n      } catch (e) {\n        handleError(e, notify, history);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const f = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: task?.name ?? '',\n      description: task?.description ?? '',\n      taskStatusId: task?.taskStatus?.id ?? '',\n      executor: task?.executor ? task.executor.id : '',\n      labels: task?.labels ? task.labels.map(({ id }) => id) : [],\n    },\n    validationSchema: getValidationSchema(),\n    onSubmit: async (currentTaskData, { setSubmitting, setErrors }) => {\n      try {\n        const requestTask = {\n          name: currentTaskData.name,\n          description: currentTaskData.description,\n          executorId: parseInt(currentTaskData.executor, 10),\n          taskStatusId: parseInt(currentTaskData.taskStatusId, 10),\n          labelIds: currentTaskData.labels.map((id) => parseInt(id, 10)),\n        };\n        const { data } = await axios.put(routes.apiTask(task.id),\n          requestTask, { headers: auth.getAuthHeader() });\n        // data.taskStatus = taskStatuses.find((item) => item.id === data.taskStatus?.id);\n        log('task.edit', data);\n        dispatch(tasksActions.updateTask(data));\n        const from = { pathname: routes.tasksPagePath() };\n        history.push(from, { message: 'taskEdited' });\n      } catch (e) {\n        console.error(e);\n        log('task.edit.error', e);\n        setSubmitting(false);\n        if (e.response?.status === 422 && Array.isArray(e.response?.data)) {\n          const errors = e.response?.data\n            .reduce((acc, err) => ({ ...acc, [err.field]: err.defaultMessage }), {});\n          setErrors(errors);\n          notify.addError('taskEditFail');\n        } else {\n          handleError(e, notify, history, auth);\n        }\n      }\n    },\n    validateOnBlur: false,\n    validateOnChange: false,\n  });\n\n  if (!executors || !labels || !taskStatuses || !task) {\n    return null;\n  }\n\n  return (\n    <>\n      <h1 className=\"my-4\">{t('editTask')}</h1>\n      <Form onSubmit={f.handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"name\">{t('naming')}</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={f.values.name}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.name && f.touched.name}\n            id=\"name\"\n            name=\"name\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.name)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"description\">{t('description')}</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            value={f.values.description}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.description && f.touched.description}\n            id=\"description\"\n            name=\"description\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.description)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"taskStatusId\">{t('status')}</Form.Label>\n          <Form.Select\n            nullable\n            value={f.values.taskStatusId}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.taskStatusId && f.touched.taskStatusId}\n            id=\"taskStatusId\"\n            name=\"taskStatusId\"\n          >\n            <option value=\"\">{null}</option>\n            {taskStatuses\n              .map((status) => <option key={status.id} value={status.id}>{status.name}</option>)}\n          </Form.Select>\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.taskStatusId)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"executor\">{t('executor')}</Form.Label>\n          <Form.Select\n            value={f.values.executor}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.executor && f.touched.executor}\n            id=\"executor\"\n            name=\"executor\"\n          >\n            <option value=\"\">{null}</option>\n            {executors\n              .map((executor) => <option key={executor.id} value={executor.id}>{`${executor.firstName} ${executor.lastName}`}</option>)}\n          </Form.Select>\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.executor)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"labels\">{t('labels')}</Form.Label>\n          <Form.Select\n            multiple\n            value={f.values.labels}\n            disabled={f.isSubmitting}\n            onChange={f.handleChange}\n            onBlur={f.handleBlur}\n            isInvalid={f.errors.labels && f.touched.labels}\n            id=\"labels\"\n            name=\"labels\"\n          >\n            {labels.map((label) => <option key={label.id} value={label.id}>{label.name}</option>)}\n          </Form.Select>\n          <Form.Control.Feedback type=\"invalid\">\n            {t(f.errors.labels)}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          {t('edit')}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default EditTask;\n","// @ts-check\n\nimport React, { useEffect, useState } from 'react';\nimport {\n  Switch,\n  Route,\n  useHistory,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\n\nimport Notification from './Notification.jsx';\n\nimport Navbar from './Navbar.jsx';\nimport Welcome from './Welcome.jsx';\nimport Login from './Login.jsx';\nimport Registration from './Registration.jsx';\nimport NotFoundPage from './NotFoundPage.jsx';\nimport UsersComponent from './Users/Users.jsx';\nimport EditUser from './Users/EditUser.jsx';\n\nimport Statuses from './Statuses/Statuses.jsx';\nimport EditStatus from './Statuses/EditStatus.jsx';\nimport NewStatus from './Statuses/NewStatus.jsx';\n\nimport Labels from './Labels/Labels.jsx';\nimport EditLabel from './Labels/EditLabel.jsx';\nimport NewLabel from './Labels/NewLabel.jsx';\n\nimport Task from './Tasks/Task.jsx';\nimport Tasks from './Tasks/Tasks.jsx';\nimport NewTask from './Tasks/NewTask.jsx';\nimport EditTask from './Tasks/EditTask.jsx';\n\nimport routes from '../routes.js';\n\nimport { actions as usersActions } from '../slices/usersSlice.js';\nimport { actions as labelsActions } from '../slices/labelsSlice.js';\nimport { actions as taskStatusesActions } from '../slices/taskStatusesSlice.js';\nimport { actions as tasksActions } from '../slices/tasksSlice.js';\n\nimport { useNotify, useAuth } from '../hooks/index.js';\nimport handleError from '../utils.js';\n\nimport getLogger from '../lib/logger.js';\n\nconst log = getLogger('App');\nlog.enabled = true;\n\nconst App = () => {\n  const notify = useNotify();\n  const history = useHistory();\n  const auth = useAuth();\n  const dispatch = useDispatch();\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    const dataRoutes = [\n      {\n        name: 'users',\n        getData: async () => {\n          const { data } = await axios.get(routes.apiUsers());\n          if (!Array.isArray(data)) {\n            notify.addError('Сервер не вернул список пользователей');\n            dispatch(usersActions.addUsers([]));\n            return;\n          }\n          dispatch(usersActions.addUsers(data));\n        },\n        isSecurity: false,\n      },\n      {\n        name: 'labels',\n        getData: async () => {\n          const { data } = await axios.get(routes.apiLabels(), { headers: auth.getAuthHeader() });\n          if (!Array.isArray(data)) {\n            notify.addError('Сервер не вернул список меток');\n            dispatch(labelsActions.addLabels([]));\n            return;\n          }\n          dispatch(labelsActions.addLabels(data));\n        },\n        isSecurity: true,\n      },\n      {\n        name: 'taskStatuses',\n        getData: async () => {\n          const { data } = await axios\n            .get(routes.apiStatuses(), { headers: auth.getAuthHeader() });\n          if (!Array.isArray(data)) {\n            notify.addError('Сервер не вернул список статусов');\n            dispatch(taskStatusesActions.addTaskStatuses([]));\n            return;\n          }\n          dispatch(taskStatusesActions.addTaskStatuses(data));\n        },\n        isSecurity: true,\n      },\n      {\n        name: 'tasks',\n        getData: async () => {\n          const { data } = await axios.get(routes.apiTasks(), { headers: auth.getAuthHeader() });\n          if (!Array.isArray(data)) {\n            notify.addError('Сервер не вернул список задач');\n            dispatch(tasksActions.addTasks([]));\n            return;\n          }\n          dispatch(tasksActions.addTasks(data));\n        },\n        isSecurity: true,\n      },\n    ];\n    const promises = dataRoutes.filter(({ isSecurity }) => (isSecurity ? auth.user : true))\n      .map(({ getData }) => getData());\n    Promise.all(promises)\n      .catch((error) => handleError(error, notify, history, auth))\n      .finally(() => setLoading(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [auth.user]);\n\n  const PrivateRoute = ({ children }) => {\n    if (!auth.user) {\n      const from = { pathname: routes.homePagePath() };\n      history.push(from, { message: 'accessDenied', type: 'error' });\n      return null;\n    }\n    return children;\n  };\n\n  if (isLoading) {\n    return null;\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container wrapper flex-grow-1\">\n        <Notification />\n        <h1 className=\"my-4\">{null}</h1>\n        <Switch>\n          <Route exact path={routes.homePagePath()} component={Welcome} />\n          <Route path={routes.loginPagePath()} component={Login} />\n          <Route path={routes.signupPagePath()} component={Registration} />\n\n          <Route exact path={routes.usersPagePath()}><UsersComponent /></Route>\n          <Route path={routes.userEditPagePath(':userId')}>\n            <PrivateRoute><EditUser /></PrivateRoute>\n          </Route>\n\n          <Route exact path={routes.statusesPagePath()}>\n            <PrivateRoute><Statuses /></PrivateRoute>\n          </Route>\n          <Route path={routes.newStatusPagePath()}>\n            <PrivateRoute><NewStatus /></PrivateRoute>\n          </Route>\n          <Route path={routes.statusEditPagePath(':taskStatusId')}>\n            <PrivateRoute><EditStatus /></PrivateRoute>\n          </Route>\n\n          <Route exact path={routes.labelsPagePath()}>\n            <PrivateRoute><Labels /></PrivateRoute>\n          </Route>\n          <Route path={routes.labelEditPagePath(':labelId')}>\n            <PrivateRoute><EditLabel /></PrivateRoute>\n          </Route>\n          <Route path={routes.newLabelPagePath()}>\n            <PrivateRoute><NewLabel /></PrivateRoute>\n          </Route>\n\n          <Route exact path={routes.tasksPagePath()}>\n            <PrivateRoute><Tasks /></PrivateRoute>\n          </Route>\n          <Route path={routes.newTaskPagePath()}>\n            <PrivateRoute><NewTask /></PrivateRoute>\n          </Route>\n          <Route path={routes.taskEditPagePath(':taskId')}>\n            <PrivateRoute><EditTask /></PrivateRoute>\n          </Route>\n          <Route path={routes.taskPagePath(':taskId')}>\n            <PrivateRoute><Task /></PrivateRoute>\n          </Route>\n\n          <Route path=\"*\" component={NotFoundPage} />\n        </Switch>\n      </div>\n      <footer>\n        <div className=\"container my-5 pt-4 border-top\">\n          <a rel=\"noreferrer\" href=\"https://ru.hexlet.io\">Hexlet</a>\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","// @ts-check\n\nimport React, { useState } from 'react';\n\nimport { AuthContext } from '../contexts/index.js';\n\nconst AuthProvider = ({ children }) => {\n  const currentUser = JSON.parse(localStorage.getItem('user'));\n  const [user, setUser] = useState(currentUser || null);\n\n  const logIn = (userData) => {\n    const userAuth = {\n      ...userData,\n      username: userData.name,\n    };\n    localStorage.setItem('user', JSON.stringify(userAuth));\n    setUser(userAuth);\n  };\n\n  const update = (userData) => {\n    const userAuth = {\n      ...user,\n      username: userData.email,\n    };\n    localStorage.setItem('user', JSON.stringify(userAuth));\n    setUser(userAuth);\n  };\n\n  const logOut = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const getAuthHeader = () => {\n    const userData = JSON.parse(localStorage.getItem('user')) ?? {};\n\n    return userData.token ? { Authorization: `Bearer ${userData.token}` } : {};\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      logIn,\n      logOut,\n      getAuthHeader,\n      user,\n      update,\n    }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","// @ts-check\n\nimport React, { useEffect } from 'react';\nimport {\n  useHistory,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport _ from 'lodash';\n\nimport { NotificationContext } from '../contexts/index.js';\nimport { actions as notifyActions } from '../slices/notificationSlice.js';\n\nconst NotificationProvider = ({ children }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const clean = () => dispatch(notifyActions.clean());\n\n  const messageMapping = {\n    errors(currentErrors) {\n      const errors = currentErrors.map((err) => ({ id: _.uniqueId(), ...err, type: 'danger' }));\n      dispatch(notifyActions.addMessages(errors));\n    },\n    error(currentError) {\n      const error = { id: _.uniqueId(), text: currentError, type: 'danger' };\n      dispatch(notifyActions.addMessage(error));\n    },\n    info(text) {\n      const messages = { id: _.uniqueId(), text, type: 'info' };\n      dispatch(notifyActions.addMessage(messages));\n    },\n  };\n\n  useEffect(() => {\n    history.listen((location) => {\n      const { state } = location;\n      if (!state) {\n        dispatch(notifyActions.clean());\n        return;\n      }\n      const { message, type } = state;\n      if (!message) {\n        dispatch(notifyActions.clean());\n        return;\n      }\n\n      if (!type) {\n        messageMapping.info(message);\n        return;\n      }\n\n      messageMapping[type](message);\n    });\n  });\n\n  return (\n    <NotificationContext.Provider value={{\n      addMessage: messageMapping.info,\n      addErrors: messageMapping.errors,\n      addError: messageMapping.error,\n      clean,\n    }}\n    >\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nexport default NotificationProvider;\n","import en from './en.js';\nimport ru from './ru.js';\n\nconst resources = { en, ru };\nexport default resources;\n","const en = {\n  translation: {\n  },\n};\n\nexport default en;\n","const ru = {\n  translation: {\n    hexletTodo: 'Менеджер задач',\n    users: 'Пользователи',\n    statuses: 'Статусы',\n    status: 'Статус',\n    executor: 'Исполнитель',\n    label: 'Метка',\n    labels: 'Метки',\n    tasks: 'Задачи',\n    login: 'Вход',\n    signup: 'Регистрация',\n    welcome: {\n      title: 'Привет от Хекслета!',\n      body: 'Практические курсы по программированию',\n      buttonText: 'Узнать Больше',\n    },\n    email: 'Email',\n    password: 'Пароль',\n    name: 'Имя',\n    surname: 'Фамилия',\n    notFound: {\n      header: 'Страница не найдена',\n      message: 'Но вы можете перейти ',\n      linkText: 'на главную страницу',\n    },\n    id: 'ID',\n    fullName: 'Полное имя',\n    createDate: 'Дата создания',\n    naming: 'Наименование',\n    isMyTasks: 'Только мои задачи',\n    show: 'Показать',\n    createTask: 'Создать задачу',\n    createLabel: 'Создать метку',\n    taskCreating: 'Создание задачи',\n    labelCreating: 'Создание метки',\n    labelRemoved: 'Метка удалена',\n    description: 'Описание',\n    create: 'Создать',\n    edit: 'Изменить',\n    remove: 'Удалить',\n    createStatus: 'Создать статус',\n    statusCreating: 'Создание статуса',\n    statusCreated: 'Статус успешно создан',\n    logout: 'Выход',\n    statusEdit: 'Изменение статуса',\n    statusEdited: 'Статус успешно изменён',\n    statusRemoved: 'Статус успешно удалён',\n    labelCreated: 'Метка успешно создана',\n    labelEdit: 'Изменение метки',\n    labelEdited: 'Метка успешно изменена',\n    logoutSuccess: 'Вы разлогинены',\n    loginSuccess: 'Вы авторизованы',\n    loginFail: 'Неправильный емейл или пароль',\n    registrationSuccess: 'Успешная регистрация',\n    registrationFail: 'Не удалось зарегистрировать',\n    taskCreated: 'Задача успешно создана',\n    firstName: 'Имя',\n    lastName: 'Фамилия',\n    userEdit: 'Изменение пользователя',\n    userEdited: 'Пользователь успешно изменён',\n    userDeleteDenied: 'Вы не можете редактировать или удалять другого пользователя',\n    userEditDenied: 'Вы не можете редактировать или удалять другого пользователя',\n    userDeleted: 'Пользователь успешно удалён',\n    taskEdited: 'Задача успешно отредактирована',\n    taskRemoved: 'Задача успешно удалена',\n    enter: 'Войти',\n    tasksStatusId: 'Статус',\n    taskStatusId: 'Статус',\n    statusName: 'Статус',\n    taskEdit: 'Изменение задачи',\n    accessDenied: 'Доступ запрещён! Пожалуйста, авторизируйтесь.',\n    save: 'Сохранить',\n\n    taskCreateFail: 'Не удалось создать задачу',\n    taskEditFail: 'Не удалось изменить задачу',\n    taskRemoveFail: 'Не удалось удалить задачу',\n\n    taskStatusCreateFail: 'Не удалось создать статус',\n    taskStatusEditFail: 'Не удалось изменить статус',\n    taskStatusRemoveFail: 'Не удалось удалить статус',\n\n    labelCreateFail: 'Не удалось создать метку',\n    labelEditFail: 'Не удалось изменить метку',\n    labelRemoveFail: 'Не удалось удалить метку',\n\n    userEditFail: 'Не удалось изменить пользователя',\n\n    taskEditDenied: 'Задачу может удалить только её автор',\n\n    editTask: 'Редактирование задачи',\n  },\n};\n\nexport default ru;\n","// @ts-check\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport usersReducer from './usersSlice.js';\nimport labelsReducer from './labelsSlice.js';\nimport taskStatusesReducer from './taskStatusesSlice.js';\nimport tasksReducer from './tasksSlice.js';\nimport notifyReducer from './notificationSlice.js';\n\nexport default configureStore({\n  reducer: {\n    users: usersReducer,\n    labels: labelsReducer,\n    taskStatuses: taskStatusesReducer,\n    tasks: tasksReducer,\n    notify: notifyReducer,\n  },\n});\n","// @ts-check\n\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport i18next from 'i18next';\nimport { I18nextProvider, initReactI18next } from 'react-i18next';\nimport { Provider as RollbarProvider, ErrorBoundary } from '@rollbar/react'; // <-- Provider imports 'rollbar' for us\n\nimport App from './components/App.jsx';\nimport AuthProvider from './providers/AuthProvider.jsx';\nimport NotificationProvider from './providers/NotificationProvider.jsx';\nimport resources from './locales/index.js';\n\nimport store from './slices/index.js';\n\nconst app = async () => {\n  const isProduction = process.env.NODE_ENV === 'production';\n\n  const rollbarConfig = {\n    accessToken: process.env.ROLLBAR_TOKEN,\n    captureUncaught: true,\n    captureUnhandledRejections: true,\n    payload: {\n      environment: 'production',\n    },\n    enabled: isProduction,\n  };\n\n  const i18n = i18next.createInstance();\n\n  await i18n\n    .use(initReactI18next)\n    .init({\n      resources,\n      fallbackLng: 'ru',\n    });\n\n  const vdom = (\n    <RollbarProvider config={rollbarConfig}>\n      <ErrorBoundary>\n        <Provider store={store}>\n          <Router>\n            <AuthProvider>\n              <NotificationProvider>\n                <I18nextProvider i18n={i18n}>\n                  <App />\n                </I18nextProvider>\n              </NotificationProvider>\n            </AuthProvider>\n          </Router>\n        </Provider>\n      </ErrorBoundary>\n    </RollbarProvider>\n  );\n\n  return vdom;\n};\n\nexport default app;\n","// @ts-check\nimport ReactDOM from 'react-dom';\nimport init from './init.jsx';\nimport './index.scss';\n\nif (process.env.NODE_ENV !== 'production') {\n  localStorage.debug = 'frontend:*';\n}\n\nconst app = async () => {\n  const vdom = await init();\n  ReactDOM.render(vdom, document.querySelector('#container'));\n  return vdom;\n};\n\napp();\n"],"sourceRoot":""}